name: Deploy to Production

on:
  workflow_dispatch:
    inputs:
      confirm_production:
        description: 'Type "PRODUCTION" to confirm deployment'
        required: true
        default: ''

jobs:
  validate-input:
    runs-on: ubuntu-latest
    name: Validate Production Deployment
    steps:
      - name: Validate confirmation
        run: |
          if [ "${{ github.event.inputs.confirm_production }}" != "PRODUCTION" ]; then
            echo "‚ùå Production deployment requires typing 'PRODUCTION' exactly"
            exit 1
          fi
          echo "‚úÖ Production deployment confirmed"

  deploy-production:
    runs-on: ubuntu-latest
    name: Deploy to Production
    needs: validate-input
    environment: production
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm --filter @repo/db build

      - name: Deploy to production
        run: pnpm sst deploy --stage production
        env:
          SST_STAGE: production

      - name: Deployment Success Notification
        if: success()
        run: |
          echo "üöÄ Production deployment successful!"
          echo "üåê Landing: https://jaredconnor.dev"
          echo "üìù Blog: https://blog.jaredconnor.dev"
          echo "‚öôÔ∏è CMS: https://cms.jaredconnor.dev"